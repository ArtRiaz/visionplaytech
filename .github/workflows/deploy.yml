name: Deploy React App to AWS S3 + CloudFront

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# —á—Ç–æ–±—ã –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–µ –ø—É—à–∏ –Ω–µ —Ç–æ–ª–∫–∞–ª–∏—Å—å
concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --coverage --watchAll=false

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    # –¥–µ–ø–ª–æ–∏–º —Ç–æ–ª—å–∫–æ –Ω–∞ push –≤ main
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build React app
        env:
          CI: false  # –ø–æ–¥–∞–≤–ª—è–µ—Ç –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏–µ warning –≤ error —É CRA
        run: npm run build

      # (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) —Å–æ—Ö—Ä–∞–Ω—è–µ–º –±–∏–ª–¥ –∫–∞–∫ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –Ω–∞ 5 –¥–Ω–µ–π
      - name: Upload build as artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build
          retention-days: 5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # –î–æ–ª–≥–∏–π –∫—ç—à –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∞—Å—Å–µ—Ç–æ–≤ (css/js/media), –∫—Ä–æ–º–µ html –∏ sw
      - name: Upload static assets (long cache)
        run: |
          aws s3 sync build/ s3://${{ secrets.S3_BUCKET_NAME }} \
            --delete \
            --cache-control "public,max-age=31536000,immutable" \
            --exclude "*.html" \
            --exclude "service-worker.js"

      # –ö–æ—Ä–æ—Ç–∫–∏–π –∫—ç—à —Ç–æ–ª—å–∫–æ –¥–ª—è HTML –∏ service worker
      - name: Upload HTML + SW (short cache)
        run: |
          aws s3 sync build/ s3://${{ secrets.S3_BUCKET_NAME }} \
            --cache-control "public,max-age=0,must-revalidate" \
            --exclude "*" \
            --include "*.html" \
            --include "service-worker.js"

      # (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) —Å–æ–≤—Å–µ–º –æ—Ç–∫–ª—é—á–∏—Ç—å –∫—ç—à SW —É –∫–ª–∏–µ–Ω—Ç–æ–≤
      - name: Force no-store for service-worker
        continue-on-error: true
        run: |
          if aws s3 ls s3://${{ secrets.S3_BUCKET_NAME }}/service-worker.js >/dev/null 2>&1; then
            aws s3 cp s3://${{ secrets.S3_BUCKET_NAME }}/service-worker.js - | \
            aws s3 cp - s3://${{ secrets.S3_BUCKET_NAME }}/service-worker.js \
              --cache-control "no-store" \
              --content-type "application/javascript"
          fi

      # –ò–Ω–≤–∞–ª–∏–¥–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤—ã—Ö –ø—É—Ç–µ–π (–¥–µ—à–µ–≤–ª–µ –∏ –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º /*)
      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/index.html" "/404.html" "/asset-manifest.json" "/"

      - name: Deployment status
        run: |
          echo "üöÄ Deployment completed successfully!"
          echo "Your app is available at: https://${{ secrets.CLOUDFRONT_DOMAIN }}"
